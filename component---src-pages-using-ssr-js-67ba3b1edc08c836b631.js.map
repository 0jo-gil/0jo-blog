{"version":3,"file":"component---src-pages-using-ssr-js-67ba3b1edc08c836b631.js","mappings":"2IA4CA,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEA,EAAW,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBL,MAExC,OACE,iCACE,2BAAQM,EAAgB,GAAEN,OAAWM,IAAiBN,KACtD,iBAAMO,KAAK,cAAcC,QAASJ,KAClC,iBAAMK,SAAS,WAAWD,QAASR,KACnC,iBAAMS,SAAS,iBAAiBD,QAASJ,KACzC,iBAAMK,SAAS,UAAUD,QAAQ,aACjC,iBAAMD,KAAK,eAAeC,QAAQ,aAClC,iBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,aAAjB,EAAmBK,SAAW,MACpE,iBAAMH,KAAK,gBAAgBC,QAASR,KACpC,iBAAMO,KAAK,sBAAsBC,QAASJ,IACzCH,IAGP,C,mGCrCA,MA4BaU,EAAO,KAAM,SAAC,IAAG,CAACX,MAAM,cAErC,UA9BiB,IAAoB,IAAnB,WAAEY,GAAY,EAC9B,OACE,4BACE,0BAAI,iBACW,uBAAG,6BAElB,yBAAG,mHAE4C,KAC7C,0BAAM,0CAA4C,QAEpD,gBACEC,MAAO,CAAEC,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKL,EAAWM,WAElB,yBAAG,kCAC+B,KAChC,cAAGC,KAAK,mFAAkF,SAAC,8CAEvF,QAGN,SAAC,EAAAC,KAAI,CAACC,GAAG,IAAG,SAAC,8BACT,C","sources":["webpack://0jo-blog/./src/components/seo.js","webpack://0jo-blog/./src/pages/using-ssr.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <div>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </div>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Head","serverData","style","width","borderRadius","alt","src","message","href","Link","to"],"sourceRoot":""}