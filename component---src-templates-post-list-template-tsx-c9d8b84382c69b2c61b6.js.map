{"version":3,"file":"component---src-templates-post-list-template-tsx-c9d8b84382c69b2c61b6.js","mappings":"8NA0BA,MAxBsB,KAkBX,CACHA,OAjBW,CAACC,EAAkBC,KACzBD,IAILE,EAAAA,EAAAA,UAAU,eAAcD,EAAe,IAAI,EAa3CE,OAVW,CAACC,EAAkBH,KACzBG,GAA4B,IAAjBH,IAIhBC,EAAAA,EAAAA,UAAU,gBAAcD,EAAe,GAAI,I,UCf5C,MAAMI,GAAqB,2HASrBC,GAAkB,gHAKlBC,IAAAA,IAAC,SAACC,GAAS,SAAKA,EAAW,EAAI,CAAC,kJ,uBCoB7C,MAvBmBD,IAKe,IALd,YACIE,EAAW,UACXC,EAAS,YACTC,EAAW,gBACXC,GACI,EACxB,MAAM,OAACb,EAAM,OAAEI,GAAUU,IAEzB,OACIC,EAAAA,EAAAA,MAACT,EAAqB,YAClBU,EAAAA,EAAAA,KAACT,EAAkB,CAACE,SAAUI,EACVI,QAAS,IAAMb,EAAOS,EAAiBH,GAAa,UACpEM,EAAAA,EAAAA,KAACE,EAAAA,IAAW,OAEhBH,EAAAA,EAAAA,MAAAA,OAAAA,CAAAA,SAAAA,CAAOL,EAAY,MAAIC,MACvBK,EAAAA,EAAAA,KAACT,EAAkB,CAACE,SAAUG,EACVK,QAAS,IAAMjB,EAAOY,EAAaF,GAAa,UAChEM,EAAAA,EAAAA,KAACG,EAAAA,IAAY,QAEG,ECyBhC,MAvByBX,IAOc,IANTY,MACIC,mBAAmB,MACfC,EAAK,SACLC,KAGJ,EAE9B,OACIP,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAAC,UACHV,EAAAA,EAAAA,MAACW,EAAAA,GAAgB,CAAAD,SAAAA,EACbT,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACC,MAAON,KAEjBN,EAAAA,EAAAA,KAAAA,MAAAA,CAAAS,UACIT,EAAAA,EAAAA,KAACa,EAAU,CAACnB,YAAaa,EAASb,YAAaC,UAAWY,EAASZ,UACvDC,YAAaW,EAASX,YAAaC,gBAAiBU,EAASV,wBAG5E,C","sources":["webpack://gatsby-starter-default/./src/components/Pagination/usePagination.tsx","webpack://gatsby-starter-default/./src/components/Pagination/style.ts","webpack://gatsby-starter-default/./src/components/Pagination/Pagination.tsx","webpack://gatsby-starter-default/./src/templates/PostListTemplate.tsx"],"sourcesContent":["import {navigate} from \"gatsby\";\n\nconst usePagination = () => {\n\n    const onNext = (hasNext: boolean, currentIndex: number) => {\n        if (!hasNext) {\n            return\n        }\n\n        navigate(`/posts/list/${currentIndex + 1}`)\n    }\n\n    const onPrev = (hasPrev: boolean, currentIndex: number) => {\n        if (!hasPrev || currentIndex === 1) {\n            return\n        }\n\n        navigate(`/posts/list/${currentIndex - 1}`)\n    }\n\n    return {\n        onNext,\n        onPrev\n    }\n}\n\nexport default usePagination;\n","import styled from \"@emotion/styled\";\n\nexport const StPaginationContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\ntype StPaginationButtonProps = {\n    isActive?: boolean;\n}\nexport const StPaginationButton = styled.button<StPaginationButtonProps>`\n  width: 30px;\n  height: 30px;\n  border: 1px solid #ddd;\n  border-radius: 50%;\n  opacity: ${({isActive}) => isActive ? 1 : 0};\n  cursor: pointer;\n  margin: 0 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: rgb(0, 198, 142);\n    color: white;\n  }\n\n`;\n","import usePagination from \"components/Pagination/usePagination\";\nimport {StPaginationButton, StPaginationContainer} from \"components/Pagination/style\";\n\n\nimport {FaArrowLeft, FaArrowRight} from \"react-icons/fa6\";\n\ntype Props = {\n    currentPage: number;\n    pageCount: number;\n    hasNextPage: boolean;\n    hasPreviousPage: boolean;\n}\n\nconst Pagination = ({\n                        currentPage,\n                        pageCount,\n                        hasNextPage,\n                        hasPreviousPage,\n                    }: Props) => {\n    const {onNext, onPrev} = usePagination();\n\n    return (\n        <StPaginationContainer>\n            <StPaginationButton isActive={hasPreviousPage}\n                                onClick={() => onPrev(hasPreviousPage, currentPage)}>\n                <FaArrowLeft/>\n            </StPaginationButton>\n            <span>{currentPage} / {pageCount}</span>\n            <StPaginationButton isActive={hasNextPage}\n                                onClick={() => onNext(hasNextPage, currentPage)}>\n                <FaArrowRight/>\n            </StPaginationButton>\n        </StPaginationContainer>\n    )\n}\n\nexport default Pagination;\n","import {graphql} from \"gatsby\";\nimport {StInnerContainer} from \"styles/common\";\nimport PostList from \"components/Posts/PostList\";\nimport {SummaryProps} from \"../pages\";\nimport Layout from \"components/Layout/Layout\";\nimport Pagination from \"components/Pagination/Pagination\";\n\ntype Props = {\n    location: {\n        search: string;\n        href: string;\n    };\n    data: {\n        allMarkdownRemark: {\n            edges: SummaryProps[];\n            pageInfo: {\n                perPage: number;\n                currentPage: number;\n                hasNextPage: boolean;\n                hasPreviousPage: boolean;\n                itemCount: number;\n                pageCount: number;\n                totalCount: number;\n            }\n        };\n    };\n    context: {\n        limit: number;\n        skip: number;\n        numPages: number;\n        currentPage: number;\n    }\n};\n\nconst PostListTemplate = ({\n                              data: {\n                                  allMarkdownRemark: {\n                                      edges,\n                                      pageInfo\n                                  }\n                              }\n                          }: Props) => {\n\n    return (\n        <Layout>\n            <StInnerContainer>\n                <PostList posts={edges}/>\n\n                <div>\n                    <Pagination currentPage={pageInfo.currentPage} pageCount={pageInfo.pageCount}\n                                hasNextPage={pageInfo.hasNextPage} hasPreviousPage={pageInfo.hasPreviousPage}/>\n                </div>\n            </StInnerContainer>\n        </Layout>\n    )\n}\n\nexport default PostListTemplate;\n\nexport const query = graphql`\n    query blogListQuery($skip: Int!) {\n        allMarkdownRemark(\n            sort: {frontmatter: {date: DESC}}\n            limit: 5\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        summary\n                        title\n                        date\n                        category\n                        slug\n                        thumbnail {\n                          childImageSharp {\n                            gatsbyImageData\n                          }\n                          publicURL\n                        }\n                    }\n                }\n            }\n            pageInfo {\n              perPage\n              currentPage\n              hasNextPage\n              hasPreviousPage\n              itemCount\n              pageCount\n              totalCount\n            }\n        }\n    }\n`;\n"],"names":["onNext","hasNext","currentIndex","navigate","onPrev","hasPrev","StPaginationContainer","StPaginationButton","_ref","isActive","currentPage","pageCount","hasNextPage","hasPreviousPage","usePagination","_jsxs","_jsx","onClick","FaArrowLeft","FaArrowRight","data","allMarkdownRemark","edges","pageInfo","Layout","children","StInnerContainer","PostList","posts","Pagination"],"sourceRoot":""}