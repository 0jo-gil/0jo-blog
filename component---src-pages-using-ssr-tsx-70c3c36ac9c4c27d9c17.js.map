{"version":3,"file":"component---src-pages-using-ssr-tsx-70c3c36ac9c4c27d9c17.js","mappings":"mIAmDA,IA1CA,SAAa,GAA6E,IAA7E,YAAEA,EAAW,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,GAA0C,EACrF,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAcrBJ,MAAOK,EAAcN,YAAaO,EAAkB,QAAEC,EAAO,OAAEC,GAAUL,EAAKM,KAAKC,aAEpFC,EAAM,CACVX,MAAOA,GAASK,EAChBN,YAAaA,GAAeO,EAC5BM,IAAM,GAAEL,IAAUN,GAAY,OAGhC,OACEY,EAAAA,EAAAA,MAAAA,EAAAA,SAAAA,CAAAA,SAAAA,EACEC,EAAAA,EAAAA,KAAAA,QAAAA,CAAAA,SAAQH,EAAIX,SACZc,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,KAAK,cAAcC,QAASL,EAAIZ,eACtCe,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,KAAK,SAASC,QAASR,KAC7BM,EAAAA,EAAAA,KAAAA,OAAAA,CAAMG,SAAS,WAAWD,QAASL,EAAIX,SACvCc,EAAAA,EAAAA,KAAAA,OAAAA,CAAMG,SAAS,iBAAiBD,QAASL,EAAIZ,eAC7Ce,EAAAA,EAAAA,KAAAA,OAAAA,CAAMG,SAAS,SAASD,QAASL,EAAIC,OACrCE,EAAAA,EAAAA,KAAAA,OAAAA,CAAMG,SAAS,UAAUD,QAAQ,aACjCF,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,KAAK,eAAeC,QAAQ,aAClCF,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,KAAK,kBAAkBC,QAASR,KACtCM,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,KAAK,gBAAgBC,QAASL,EAAIX,SACxCc,EAAAA,EAAAA,KAAAA,OAAAA,CAAMC,KAAK,sBAAsBC,QAASL,EAAIZ,cAE7CG,IAGP,C,mGC5CA,MA4BagB,EAAO,KAAMJ,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACnB,MAAM,cAErC,UA9BiBoB,IAAyC,IAAxC,WAAEC,GAAiC,EACnD,OACER,EAAAA,EAAAA,MAAAA,MAAAA,CAAAX,SAAAA,EACEW,EAAAA,EAAAA,MAAAA,KAAAA,CAAAX,SAAAA,CAAI,iBACW,cAAAA,SAAG,6BAElBW,EAAAA,EAAAA,MAAAA,IAAAA,CAAAX,SAAAA,CAAG,mHAE4C,KAC7CY,EAAAA,EAAAA,KAAAA,OAAAA,CAAAZ,SAAM,0CAA4C,QAEpDY,EAAAA,EAAAA,KAAAA,MAAAA,CACEQ,MAAO,CAAEC,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKL,EAAWM,WAElBd,EAAAA,EAAAA,MAAAA,IAAAA,CAAAX,SAAAA,CAAG,kCAC+B,KAChCY,EAAAA,EAAAA,KAAAA,IAAAA,CAAGc,KAAK,mFAAkF1B,SAAC,8CAEvF,QAGNY,EAAAA,EAAAA,KAACe,EAAAA,KAAI,CAACC,GAAG,IAAG5B,SAAC,8BACT,C","sources":["webpack://0jo-blog/./src/components/Seo.tsx","webpack://0jo-blog/./src/pages/using-ssr.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ntype Props = {\n  title?: string\n  description?: string\n  pathname?: string\n}\n\nfunction Seo({ description, title, pathname, children }: React.PropsWithChildren<Props>) {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n  const {title: defaultTitle, description: defaultDescription, siteUrl, author} = data.site.siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || '/'}`,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"author\" content={author} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:description\" content={seo.description} />\n\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Seo from \"components/Seo\"\n\n\nconst UsingSSR = ({ serverData }: { serverData: any }) => {\n  return (\n    <div>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </div>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["description","title","pathname","children","data","useStaticQuery","defaultTitle","defaultDescription","siteUrl","author","site","siteMetadata","seo","url","_jsxs","_jsx","name","content","property","Head","Seo","_ref","serverData","style","width","borderRadius","alt","src","message","href","Link","to"],"sourceRoot":""}