{"version":3,"file":"component---src-pages-index-tsx-dca1437a32c73a384b30.js","mappings":"4VAEO,MAAMA,GAAmB,iFAKnBC,GAAmB,sEAInBC,GAAiB,sEAIjBC,GAAiB,4HAMjBC,GAAiB,8FAQjBC,GAAoB,sCAIpBC,GAAmB,qHAMnBC,GAAsB,wH,gHCTnC,MAbuBC,IAA2C,IAA1C,OAAGC,GAAS,EAAK,SAAEC,GAAiB,EAExD,OACIC,EAAAA,EAAAA,KAACC,EAAU,CACPH,OAAQA,EACR,aAAa,GAAEC,SACfG,GAAK,UAASC,UAAUJ,KAAY,SAEnCA,GACQ,EAMrB,MAAME,GAAaG,EAAAA,EAAAA,IAAOC,IAAAA,IAAC,OAAEP,KAAWQ,GAAwB,SAC9DN,EAAAA,EAAAA,KAACO,EAAAA,KAAI,IAAKD,GAAS,GACpB,oBAFkBF,CAEjB,kIAQmBI,IAAAA,IAAC,OAAEV,GAAQ,SAAMA,EAAS,KAAO,CAAC,GAAC,0FCvClDW,EAAaZ,IAAoC,IAAnC,SAACa,GAA4B,EAC7C,OACIV,EAAAA,EAAAA,KAAAA,MAAAA,CAAAA,SACKU,GACC,EAId,QAEAD,EAAWE,KAAOC,ECOlB,MAjBwBf,IAAmB,IAAlB,MAACgB,GAAW,EACjC,OACIb,EAAAA,EAAAA,KAACS,EAAU,UAEHI,aAAK,EAALA,EAAOC,KAAKC,IAEJf,EAAAA,EAAAA,KAACS,EAAWE,KAAI,CAEZZ,SAAUgB,EAAKA,KAAKC,YAAYjB,UAD3BgB,EAAKA,KAAKC,YAAYC,UAMlC,E,oBCgBrB,MAtBiBpB,IAAkB,IAAD,QAAhB,KAACqB,GAAU,EAEzB,OACIlB,EAAAA,EAAAA,KAACO,EAAAA,KAAI,CAACL,GAAK,UAASgB,EAAKH,KAAKC,YAAYG,OAAO,UAC7CC,EAAAA,EAAAA,MAAC/B,EAAAA,GAAmB,YAEZW,EAAAA,EAAAA,KAACV,EAAAA,GAAmB,WAChBU,EAAAA,EAAAA,KAAAA,MAAAA,CAAKqB,OAA6B,QAAvB,EAAEH,EAAKH,KAAKC,mBAAW,OAAW,QAAX,EAArBM,EAAuBC,iBAAS,WAAX,EAArBC,EAAkCC,UAAWC,IAAKR,EAAKH,KAAKC,YAAYC,WAGzFG,EAAAA,EAAAA,MAAC7B,EAAAA,GAAiB,YACd6B,EAAAA,EAAAA,MAAC5B,EAAAA,GAAiB,WAAC,KAAG0B,EAAKH,KAAKC,YAAYjB,aAC5CC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAc,UAAET,EAAKH,KAAKC,YAAYC,SACvCjB,EAAAA,EAAAA,KAACP,EAAAA,GAAiB,UAAEyB,EAAKH,KAAKC,YAAYY,WAC1C5B,EAAAA,EAAAA,KAAAA,MAAAA,CAAAA,SAAMkB,EAAKH,KAAKC,YAAYa,cAIrC,ECVf,MAhBiBhC,IAAqB,IAApB,MAAEiC,GAAY,EAE5B,OACI9B,EAAAA,EAAAA,KAAAA,MAAAA,CAAAA,SAEQ8B,IACAA,aAAK,EAALA,EAAOhB,KAAKI,IAEJlB,EAAAA,EAAAA,KAAC+B,EAAQ,CAACb,KAAMA,QAI1B,EC+Cd,MArBarB,IAOA,IANXmC,UAAU,OAACC,EAAM,KAAEC,GACnBC,MACEC,mBAAmB,MACjBC,KAGE,EAEN,OACErC,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,CACLrB,MAAM,OAAMP,UAEZU,EAAAA,EAAAA,MAACmB,EAAAA,GAAgB,CAAA7B,SAAAA,EACfV,EAAAA,EAAAA,KAACwC,EAAe,CAAC3B,MAAOwB,KACxBrC,EAAAA,EAAAA,KAACyC,EAAS,CAACX,MAAOO,QAEb,C","sources":["webpack://gatsby-starter-default/./src/components/Posts/style.ts","webpack://gatsby-starter-default/./src/components/Categories/CategoriesItem.tsx","webpack://gatsby-starter-default/./src/components/Categories/Categories.tsx","webpack://gatsby-starter-default/./src/components/Categories/CategoriesUsage.tsx","webpack://gatsby-starter-default/./src/components/Posts/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Posts/PostList.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StPostItemContainer = styled.div`\n  display: flex;\n  gap: 5%;\n`;\n\nexport const StPostItemThumbnail = styled.div`\n  flex: 0.2;\n`;\n\nexport const StPostItemContent = styled.div`\n  flex: 0.8;\n`;\n\nexport const StPostItemHashTag = styled.div`\n  font-size: 14px;\n  color: rgb(0, 198, 142);\n  font-family: 'BMHANNAPro';\n`;\n\nexport const StPostItemSummary = styled.p`\n  font-size: 16px;\n  color: rgb(41,41,41);\n`;\n\n\n// PostTemplate.tsx\n\nexport const StPostTitleContainer = styled.div`\n    \n`;\n\nexport const StPostTemplateTitle = styled.h1`\n  font-size: 38px;\n  font-weight: bold;\n  font-family: 'BMHANNAPro';\n`;\n\nexport const StPostPreviewContainer = styled.div`\n  margin-top: 60px;\n  \n  * {\n    font-family: 'BMHANNAAir';\n    font-weight: 700;\n  }\n`;","import styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\nimport { ReactNode } from \"react\";\n\n\ntype Props = {\n  active?: boolean;\n  innerText?: string;\n  category: string;\n};\n\ntype GatsbyLinkProps = {\n  to: string;\n  active: boolean;\n  children: ReactNode;\n};\n\nconst CategoriesItem = ({  active = false, category }: Props) => {\n\n    return (\n        <StyledLink\n            active={active}\n            aria-label={`${category} 카테고리`}\n            to={`/posts/${encodeURI(category)}`}\n        >\n            {category}\n        </StyledLink>\n    )\n};\n\nexport default CategoriesItem;\n\nconst StyledLink = styled(({ active, ...props }: GatsbyLinkProps) => (\n  <Link {...props} />\n))<{ active: boolean }>`\n  z-index: 9;\n  display: inline-block;\n  padding: 0.25rem 0.75rem;\n  font-size: 0.9rem;\n  white-space: nowrap;\n\n  border-radius: 1rem;\n  transform: scale(${({ active }) => (active ? 1.15 : 1)});\n  cursor: pointer;\n  transition: all 0.1s ease-out;\n\n  &:not(:first-of-type) {\n    margin-left: 1rem;\n  }\n`;\n\n","import React, { PropsWithChildren } from \"react\";\nimport CategoriesItem from \"./CategoriesItem\";\n\nconst Categories = ({children}: PropsWithChildren) => {\n    return (\n        <div>\n            {children}\n        </div>\n    )\n}\n\nexport default Categories;\n\nCategories.Item = CategoriesItem;","import React from \"react\";\nimport Categories from \"./Categories\"\n\nconst CategoriesUsage = ({nodes}: any) => {\n    return (\n        <Categories>\n            {\n                nodes?.map((node: any) => {\n                    return (\n                        <Categories.Item\n                            key={node.node.frontmatter.title}\n                            category={node.node.frontmatter.category}\n                        />\n                    )\n                })\n            }\n        </Categories>\n    )\n}\n\nexport default CategoriesUsage;","import {\n    StPostItemContainer,\n    StPostItemContent,\n    StPostItemHashTag,\n    StPostItemSummary,\n    StPostItemThumbnail\n} from \"components/Posts/style\";\nimport {StContentTitle} from \"styles/common\";\nimport {Link} from \"gatsby\";\n\nconst PostItem = ({post}: any) => {\n\n    return (\n        <Link to={`/posts/${post.node.frontmatter.slug}`}>\n            <StPostItemContainer >\n\n                    <StPostItemThumbnail>\n                        <img srcSet={post.node.frontmatter?.thumbnail?.publicURL} alt={post.node.frontmatter.title} />\n                    </StPostItemThumbnail>\n\n                    <StPostItemContent>\n                        <StPostItemHashTag># {post.node.frontmatter.category}</StPostItemHashTag>\n                        <StContentTitle>{post.node.frontmatter.title}</StContentTitle>\n                        <StPostItemSummary>{post.node.frontmatter.summary}</StPostItemSummary>\n                        <div>{post.node.frontmatter.date}</div>\n                    </StPostItemContent>\n\n            </StPostItemContainer>\n        </Link>\n    )\n}\n\nexport default PostItem;\n","import PostItem from \"./PostItem\";\n\nconst PostList = ({ posts }: any) => {\n\n    return (\n        <div>\n            {\n                posts &&\n                posts?.map((post: any) => {\n                    return (\n                        <PostItem post={post} />\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default PostList;","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"components/Layout/Layout\"\nimport CategoriesUsage from \"components/Categories/CategoriesUsage\";\n\nimport PostsList from \"components/Posts/PostList\";\n\nimport queryString from \"query-string\";\nimport {StInnerContainer} from \"styles/common\";\n\ntype Props = {\n  location: {\n    search: string;\n    href: string;\n  };\n  data: {\n    allMarkdownRemark: {\n      edges: SummaryProps[];\n    };\n  };\n};\n\nexport type SummaryProps = {\n\n  nodes: {\n    categories: string[];\n    title: string;\n    date: string;\n    summary: string;\n  }\n}\n\ndeclare module \"react\" {\n  interface IntrinsicAttributes {\n\n    nodes?: SummaryProps[];\n  }\n}\n\nconst Home = ({\n  location: {search, href},\n  data: {\n    allMarkdownRemark: {\n      edges,\n    }\n  },\n}: Props) => {\n\n  return (\n    <Layout\n      title='Home'\n    >\n      <StInnerContainer>\n        <CategoriesUsage nodes={edges} />\n        <PostsList posts={edges}/>\n      </StInnerContainer>\n    </Layout>\n  )\n}\n\nexport default Home;\n\nexport const query = graphql`\n  query getPosts {\n    allMarkdownRemark(sort: {frontmatter: {date: DESC}}, limit: 5) {\n      edges {\n        node {\n          frontmatter {\n            summary\n            title\n            date\n            category\n            slug\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["StPostItemContainer","StPostItemThumbnail","StPostItemContent","StPostItemHashTag","StPostItemSummary","StPostTitleContainer","StPostTemplateTitle","StPostPreviewContainer","_ref","active","category","_jsx","StyledLink","to","encodeURI","_styled","_ref2","props","Link","_ref3","Categories","children","Item","CategoriesItem","nodes","map","node","frontmatter","title","post","slug","_jsxs","srcSet","_post$node$frontmatte","thumbnail","_post$node$frontmatte2","publicURL","alt","StContentTitle","summary","date","posts","PostItem","location","search","href","data","allMarkdownRemark","edges","Layout","StInnerContainer","CategoriesUsage","PostsList"],"sourceRoot":""}