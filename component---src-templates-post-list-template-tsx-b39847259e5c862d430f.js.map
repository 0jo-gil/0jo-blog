{"version":3,"file":"component---src-templates-post-list-template-tsx-b39847259e5c862d430f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Posts/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Posts/PostList.tsx","webpack://gatsby-starter-default/./src/components/Posts/style.ts","webpack://gatsby-starter-default/./src/components/Pagination/usePagination.tsx","webpack://gatsby-starter-default/./src/components/Pagination/style.ts","webpack://gatsby-starter-default/./src/components/Pagination/Pagination.tsx","webpack://gatsby-starter-default/./src/templates/PostListTemplate.tsx"],"sourcesContent":["import {\n    StPostItemContainer,\n    StPostItemContent,\n    StPostItemHashTag,\n    StPostItemSummary,\n    StPostItemThumbnail\n} from \"components/Posts/style\";\nimport {StContentTitle} from \"styles/common\";\nimport {Link} from \"gatsby\";\n\nconst PostItem = ({post}: any) => {\n\n    return (\n        <Link to={`/posts/${post.node.frontmatter.slug}`}>\n            <StPostItemContainer >\n\n                    <StPostItemThumbnail>\n                        <img srcSet={post.node.frontmatter?.thumbnail?.publicURL} alt={post.node.frontmatter.title} />\n                    </StPostItemThumbnail>\n\n                    <StPostItemContent>\n                        <StPostItemHashTag># {post.node.frontmatter.category}</StPostItemHashTag>\n                        <StContentTitle>{post.node.frontmatter.title}</StContentTitle>\n                        <StPostItemSummary>{post.node.frontmatter.summary}</StPostItemSummary>\n                        <div>{post.node.frontmatter.date}</div>\n                    </StPostItemContent>\n\n            </StPostItemContainer>\n        </Link>\n    )\n}\n\nexport default PostItem;\n","import PostItem from \"./PostItem\";\n\nconst PostList = ({ posts }: any) => {\n\n    return (\n        <div>\n            {\n                posts &&\n                posts?.map((post: any) => {\n                    return (\n                        <PostItem post={post} />\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default PostList;","import styled from '@emotion/styled';\n\nexport const StPostItemContainer = styled.div`\n  display: flex;\n  gap: 5%;\n  margin: 40px 0;\n`;\n\nexport const StPostItemThumbnail = styled.div`\n  flex: 0.2;\n`;\n\nexport const StPostItemContent = styled.div`\n  flex: 0.8;\n`;\n\nexport const StPostItemHashTag = styled.div`\n  font-size: 14px;\n  color: rgb(0, 198, 142);\n  font-family: 'BMHANNAPro';\n`;\n\nexport const StPostItemSummary = styled.p`\n  font-size: 16px;\n  color: rgb(41, 41, 41);\n`;\n\n\n// PostTemplate.tsx\n\nexport const StPostTitleContainer = styled.div`\n\n`;\n\nexport const StPostTemplateTitle = styled.h1`\n  font-size: 38px;\n  font-weight: bold;\n  font-family: 'BMHANNAPro';\n`;\n\nexport const StPostPreviewContainer = styled.div`\n  margin-top: 60px;\n\n  * {\n    font-family: 'BMHANNAAir';\n    font-weight: 700;\n  }\n`;\n","import {navigate} from \"gatsby\";\n\nconst usePagination = () => {\n\n    const onNext = (hasNext: boolean, currentIndex: number) => {\n        if (!hasNext) {\n            return\n        }\n\n        navigate(`/posts/list/${currentIndex + 1}`)\n    }\n\n    const onPrev = (hasPrev: boolean, currentIndex: number) => {\n        if (!hasPrev || currentIndex === 1) {\n            return\n        }\n\n        navigate(`/posts/list/${currentIndex - 1}`)\n    }\n\n    return {\n        onNext,\n        onPrev\n    }\n}\n\nexport default usePagination;\n","import styled from \"@emotion/styled\";\n\nexport const StPaginationContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\ntype StPaginationButtonProps = {\n    isActive?: boolean;\n}\nexport const StPaginationButton = styled.button<StPaginationButtonProps>`\n  width: 30px;\n  height: 30px;\n  border: 1px solid #ddd;\n  border-radius: 50%;\n  opacity: ${({isActive}) => isActive ? 1 : 0};\n  cursor: pointer;\n  margin: 0 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: rgb(0, 198, 142);\n    color: white;\n  }\n\n`;\n","import usePagination from \"components/Pagination/usePagination\";\nimport {StPaginationButton, StPaginationContainer} from \"components/Pagination/style\";\n\n\nimport {FaArrowLeft, FaArrowRight} from \"react-icons/fa6\";\n\ntype Props = {\n    currentPage: number;\n    pageCount: number;\n    hasNextPage: boolean;\n    hasPreviousPage: boolean;\n}\n\nconst Pagination = ({\n                        currentPage,\n                        pageCount,\n                        hasNextPage,\n                        hasPreviousPage,\n                    }: Props) => {\n    const {onNext, onPrev} = usePagination();\n\n    return (\n        <StPaginationContainer>\n            <StPaginationButton isActive={hasPreviousPage}\n                                onClick={() => onPrev(hasPreviousPage, currentPage)}>\n                <FaArrowLeft/>\n            </StPaginationButton>\n            <span>{currentPage} / {pageCount}</span>\n            <StPaginationButton isActive={hasNextPage}\n                                onClick={() => onNext(hasNextPage, currentPage)}>\n                <FaArrowRight/>\n            </StPaginationButton>\n        </StPaginationContainer>\n    )\n}\n\nexport default Pagination;\n","import {graphql} from \"gatsby\";\nimport {StInnerContainer} from \"styles/common\";\nimport PostList from \"components/Posts/PostList\";\nimport {SummaryProps} from \"../pages\";\nimport Layout from \"components/Layout/Layout\";\nimport Pagination from \"components/Pagination/Pagination\";\n\ntype Props = {\n    location: {\n        search: string;\n        href: string;\n    };\n    data: {\n        allMarkdownRemark: {\n            edges: SummaryProps[];\n            pageInfo: {\n                perPage: number;\n                currentPage: number;\n                hasNextPage: boolean;\n                hasPreviousPage: boolean;\n                itemCount: number;\n                pageCount: number;\n                totalCount: number;\n            }\n        };\n    };\n    context: {\n        limit: number;\n        skip: number;\n        numPages: number;\n        currentPage: number;\n    }\n};\n\nconst PostListTemplate = ({\n                              data: {\n                                  allMarkdownRemark: {\n                                      edges,\n                                      pageInfo\n                                  }\n                              }\n                          }: Props) => {\n\n    return (\n        <Layout>\n            <StInnerContainer>\n                <PostList posts={edges}/>\n\n                <div>\n                    <Pagination currentPage={pageInfo.currentPage} pageCount={pageInfo.pageCount}\n                                hasNextPage={pageInfo.hasNextPage} hasPreviousPage={pageInfo.hasPreviousPage}/>\n                </div>\n            </StInnerContainer>\n        </Layout>\n    )\n}\n\nexport default PostListTemplate;\n\nexport const query = graphql`\n    query blogListQuery($skip: Int!) {\n        allMarkdownRemark(\n            sort: {frontmatter: {date: DESC}}\n            limit: 5\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        summary\n                        title\n                        date\n                        category\n                        slug\n                        thumbnail {\n                          childImageSharp {\n                            gatsbyImageData\n                          }\n                          publicURL\n                        }\n                    }\n                }\n            }\n            pageInfo {\n              perPage\n              currentPage\n              hasNextPage\n              hasPreviousPage\n              itemCount\n              pageCount\n              totalCount\n            }\n        }\n    }\n`;\n"],"names":["_ref","post","_jsx","Link","to","node","frontmatter","slug","_jsxs","StPostItemContainer","StPostItemThumbnail","srcSet","_post$node$frontmatte","thumbnail","_post$node$frontmatte2","publicURL","alt","title","StPostItemContent","StPostItemHashTag","category","StContentTitle","StPostItemSummary","summary","date","posts","map","PostItem","StPostTitleContainer","StPostTemplateTitle","StPostPreviewContainer","onNext","hasNext","currentIndex","navigate","onPrev","hasPrev","StPaginationContainer","StPaginationButton","isActive","currentPage","pageCount","hasNextPage","hasPreviousPage","usePagination","onClick","FaArrowLeft","FaArrowRight","data","allMarkdownRemark","edges","pageInfo","Layout","children","StInnerContainer","PostList","Pagination"],"sourceRoot":""}